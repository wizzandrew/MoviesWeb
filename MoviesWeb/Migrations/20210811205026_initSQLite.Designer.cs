// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesWeb.Context;

namespace MoviesWeb.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20210811205026_initSQLite")]
    partial class initSQLite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("MoviesWeb.Context.ContextModels.DirectorDb", b =>
                {
                    b.Property<int>("Movie_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Person_id")
                        .HasColumnType("INTEGER");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("MoviesWeb.Context.ContextModels.MovieListDb", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Movie_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id", "Movie_id");

                    b.ToTable("MovieLists");
                });

            modelBuilder.Entity("MoviesWeb.Context.ContextModels.PersonDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Birth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("MoviesWeb.Context.ContextModels.RatingDb", b =>
                {
                    b.Property<int>("Movie_id")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Rating")
                        .HasColumnType("REAL");

                    b.Property<int>("Votes")
                        .HasColumnType("INTEGER");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("MoviesWeb.Context.ContextModels.StarDb", b =>
                {
                    b.Property<int>("Movie_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Person_id")
                        .HasColumnType("INTEGER");

                    b.ToTable("Stars");
                });

            modelBuilder.Entity("MoviesWeb.Context.ContextModels.UserListDb", b =>
                {
                    b.Property<int>("User_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("List_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("User_id", "List_id");

                    b.ToTable("UserLists");
                });

            modelBuilder.Entity("MoviesWeb.Models.MovieDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
